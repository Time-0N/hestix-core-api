# =========================
# Database (PostgreSQL)
# =========================
# Connection string for your Axum backend DB.
# Format: postgres://<user>:<password>@<host>:<port>/<db>
DATABASE_URL=postgres://postgres:postgres@localhost:5432/hestixdb

# Max connections in the SQLx pool
DB_MAX_CONNECTIONS=5

# =========================
# Server (Axum)
# =========================
# Bind address/port for your Rust API
HOST=localhost
PORT=5000

# RUST log level (env_filter syntax). e.g. "info", "debug", "warn"
LOG_FILTER=info

# Environment mode: "development" or "production"
# In development mode, cookies will not require HTTPS (secure=false)
# In production mode, cookies will require HTTPS (secure=true)
ENVIRONMENT=development

# CORS: the exact origin of your frontend that will call the API
# (scheme + host + port, no trailing slash)
CORS_ALLOWED_ORIGIN=http://localhost:5173

# Optional: where to redirect the browser after successful login
# (use this in your handlers if you want to bounce back to the SPA)
FRONTEND_URL=http://localhost:5173

# =========================
# OIDC (ZITADEL) — Code Flow + PKCE
# =========================
# Issuer base URL (Zitadel public URL).
# Local dev with “login” container: it’s usually http://localhost:8080
# NOTE: If your API runs inside Docker *and* Zitadel is another service,
# you might need to use http://zitadel:8080 instead of localhost.
OIDC_ISSUER_URL=http://localhost:8080

# Your ZITADEL application’s Client ID (from Console → Project → Applications)
OIDC_CLIENT_ID=334480673379254275

# Must EXACTLY match one of the “Redirect URIs” configured on your Zitadel app.
# This is the backend callback where Zitadel sends the auth code.
OIDC_REDIRECT_URL=http://localhost:5000/api/auth/callback

# Scopes you request on the authorize URL.
# Keep it *space-separated* (dotenv will strip the quotes for your app).
# - openid: required for OIDC
# - profile, email: to get username/email (enable "User Info inside ID Token" in Zitadel to receive them directly in the ID token)
# - offline_access: to receive a refresh token
OIDC_SCOPES="openid profile email offline_access"

# =========================
# ZITADEL User Sync (Optional)
# =========================
# For automatic user synchronization from ZITADEL to your database
# If not set, user sync job will be skipped (users will only be synced on login)

# Option 1: Personal Access Token as string
# ZITADEL_SERVICE_TOKEN=your_personal_access_token_here

# Option 2: Path to token file
# ZITADEL_SERVICE_TOKEN_PATH=/path/to/token.pat
